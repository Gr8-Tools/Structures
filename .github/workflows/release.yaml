name: AUTO Build TAGGED

on:
  push:
    tags:
    - "Net[A-Za-z]+_v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
      if: ${{ success() }}
      
    # SET NET6 variables
    - name: Try set LIB_TYPE='NetSixZero' from tag
      if: startsWith(github.ref, 'refs/tags/NetSixZero')
      run: |
        echo "LIB_TYPE=NetSixZero" >> $GITHUB_ENV
        echo "VERSION=${GITHUB_REF/refs\/tags\/NetSixZero_v/}" >> $GITHUB_ENV
        
    # SET NetStandard variabled
    - name: Try set LIB_TYPE='NetStandard' from tag
      if: startsWith(github.ref, 'refs/tags/NetStandard')
      run: |
        echo "LIB_TYPE=NetStandard" >> $GITHUB_ENV
        echo "VERSION=${GITHUB_REF/refs\/tags\/NetStandard_v/}" >> $GITHUB_ENV
               
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build Structures-${LIB_TYPE} --configuration Release /p:Version=${VERSION} --no-restore --verbosity normal
    - name: Test
      run: dotnet test Structures-${LIB_TYPE} --no-build --configuration Release --verbosity normal
    - name: Pack
      run: dotnet pack Structures-${LIB_TYPE} --configuration Release /p:Version=${VERSION} --no-build --output .
    - name: Push
      run: dotnet nuget push ./NuGet.Structures-${LIB_TYPE}.${VERSION}.nupkg --source https://nuget.pkg.github.com/NuclearGames/index.json --api-key ${GITHUB_TOKEN}
      
    env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
